import type { NextPage } from 'next'
import Head from 'next/head'
import { trpc } from '../utils/trpc'
import { Provider, atom, useAtom } from 'jotai'

type TechnologyCardProps = {
  name: string
  description: string
  documentation: string
}

const textAtom = atom('text in the atom')

const Home: NextPage = () => {
  // const hello = trpc.useQuery(['example.hello', { text: 'from the Backend' }])
  const hello = trpc.useQuery(['example.hello'])
  // const getAll = trpc.useQuery(['example.getAll'])
  const getRun = trpc.useQuery(['example.runFun'])

  function handleRun() {
    // console.log('event-: ', e)
    // console.log('all are: ', getRun)
  }

  const [text, setText] = useAtom(textAtom)

  return (
    <>
      <Head>
        <title>T3 stack test</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex flex-col items-center  min-h-screen p-4">
        {/* <TechnologyCard
          name="card"
          description="card descr"
          documentation="https://trpc.io/"
        /> */}
        <button className="btn" onClick={handleRun}>
          Run
        </button>
        <div className="py-6 text-2xl text-indigo-500 flex justify-center items-center w-full">
          {hello.data ? <p>{hello.data.greeting}</p> : <p>Loading..</p>}
        </div>
        <section className="flex flex-col justify-center p-6 duration-500 border border-indigo-500 rounded shadow-lg">
          <input
            className="w-full p-4 pr-12 text-sm border border-indigo-200 rounded shadow-sm"
            placeholder="Enter text"
            onChange={(e) => {
              setText(e.target.value)
            }}
          />
          <div className="pb-4" />

          <button className="btn">Test</button>
        </section>
        <div className="py-6 text-2xl text-indigo-500 flex justify-center items-center w-full">
          {text}
          {/* {getRun.data ? <p>{getRun.data?.result}</p> : <p>Loading..</p>} */}
        </div>
      </main>
    </>
  )
}

const TechnologyCard = ({
  name,
  description,
  documentation,
}: TechnologyCardProps) => {
  return (
    <section className="flex flex-col justify-center p-6 duration-500 border-2 border-gray-500 rounded shadow-xl motion-safe:hover:scale-105">
      <h2 className="text-lg text-gray-700">{name}</h2>
      <p className="text-sm text-gray-600">{description}</p>
      <a
        className="mt-3 text-sm underline text-violet-500 decoration-dotted underline-offset-2"
        href={documentation}
        target="_blank"
        rel="noreferrer"
      >
        Link
      </a>
    </section>
  )
}

export default Home
