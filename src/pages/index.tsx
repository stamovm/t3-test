import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import { atom, useAtom } from "jotai";

const textAtom = atom("text in the atom");

const Home: NextPage = () => {
  const echo = trpc.mytrpc.echo.useQuery({ text: "Hi there" });
  const myAction = trpc.mytrpc.myTest.useMutation({
    onSuccess: (input) => {
      setText("Enter: " + input);
    },
  });
  const [text, setText] = useAtom(textAtom);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex min-h-screen flex-col items-center justify-center p-4">
        <button
          className="btn"
          onClick={(e) => {
            //todo: add run
          }}
        >
          Run
        </button>
        <div className="flex w-full items-center justify-center py-6 text-2xl text-indigo-500">
          {echo.data ? <p>{echo.data.echoReturn}</p> : <p>Loading..</p>}
        </div>
        <section className="flex flex-col justify-center rounded border border-indigo-500 p-6 shadow-lg duration-500">
          <input
            className="w-full rounded border border-indigo-200 p-4 pr-12 text-sm shadow-sm"
            placeholder="Enter text"
            onChange={(e) => {
              setText(e.currentTarget.value);
            }}
            onKeyDown={(e) => {
              if (e.key === "Enter") {
                myAction.mutate({ text: e.currentTarget.value });
              }
            }}
          />
          <div className="pb-4" />

          <button
            className="btn"
            onClick={(e) => {
              //todo: add test
            }}
          >
            Test
          </button>
        </section>
        <div className="flex w-full items-center justify-center py-6 text-2xl text-indigo-500">
          {text}
        </div>

        <p className="pt-60 text-2xl text-gray-700">
          --------------------------------------------------------------------
        </p>

        <div className="mt-3 grid gap-3 pt-3 text-center md:grid-cols-2 lg:w-2/3">
          <TechnologyCard
            name="NextJS"
            description="The React framework for production"
            documentation="https://nextjs.org/"
          />
          <TechnologyCard
            name="TypeScript"
            description="Strongly typed programming language that builds on JavaScript, giving you better tooling at any scale"
            documentation="https://www.typescriptlang.org/"
          />
          <TechnologyCard
            name="TailwindCSS"
            description="Rapidly build modern websites without ever leaving your HTML"
            documentation="https://tailwindcss.com/"
          />
          <TechnologyCard
            name="tRPC"
            description="End-to-end typesafe APIs made easy"
            documentation="https://trpc.io/"
          />
          <TechnologyCard
            name="Next-Auth"
            description="Authentication for Next.js"
            documentation="https://next-auth.js.org/"
          />
          <TechnologyCard
            name="Prisma"
            description="Build data-driven JavaScript & TypeScript apps in less time"
            documentation="https://www.prisma.io/docs/"
          />
        </div>
      </main>
    </>
  );
};

export default Home;

type TechnologyCardProps = {
  name: string;
  description: string;
  documentation: string;
};

const TechnologyCard = ({
  name,
  description,
  documentation,
}: TechnologyCardProps) => {
  return (
    <section className="flex flex-col justify-center rounded border-2 border-gray-500 p-6 shadow-xl duration-500 motion-safe:hover:scale-105">
      <h2 className="text-lg text-gray-700">{name}</h2>
      <p className="text-sm text-gray-600">{description}</p>
      <a
        className="m-auto mt-3 w-fit text-sm text-violet-500 underline decoration-dotted underline-offset-2"
        href={documentation}
        target="_blank"
        rel="noreferrer"
      >
        Documentation
      </a>
    </section>
  );
};
